version: '3.8'

services:
  umbrella-transcriber:
    build: .
    container_name: umbrella-transcriber
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - PYANNOTE_TOKEN=${PYANNOTE_TOKEN}
      - S3_BUCKET=${S3_BUCKET:-umbrella-audio-processing}
      - REDIS_URL=redis://redis:6379/0
      - MAX_CONCURRENT_JOBS=${MAX_CONCURRENT_JOBS:-4}
      - GPU_MEMORY_FRACTION=${GPU_MEMORY_FRACTION:-0.9}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    ports:
      - "${API_PORT:-8000}:8000"
    volumes:
      - ./input:/data/input:ro
      - ./output:/data/output
      - ./logs:/app/logs
      - whisper-models:/root/.cache/whisper
      - pyannote-models:/root/.cache/torch
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]

  redis:
    image: redis:7-alpine
    container_name: umbrella-redis
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: umbrella-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - umbrella-transcriber
    restart: unless-stopped

volumes:
  redis-data:
  whisper-models:
  pyannote-models:

networks:
  default:
    name: umbrella-network